{"ast":null,"code":"var _jsxFileName = \"/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './showTask.css'; // Стилі для панелі\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowTask = () => {\n  _s();\n  // Локальний стан для управління активною кнопкою\n  const [activeButton, setActiveButton] = useState('button1');\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Вибірка даних з Redux (якщо потрібно)\n  const obj = useSelector(state => state.taskController);\n  console.log(obj);\n  const handleButtonClick = buttonId => {\n    setActiveButton(buttonId);\n    if (buttonId === 'button1') {\n      navigate('show-individual-tasks'); // to ShowIndividualTasks\n    } else if (buttonId === 'button2') {\n      navigate('show-corporate-tasks'); // to ShowCorporateTasks\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button1' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button1'),\n        children: \"Show individual tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button2' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button2'),\n        children: \"Show corporate tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowTask, \"cR43twcv+JgGbYDZiQyfwhep4Zs=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = ShowTask;\nexport default ShowTask;\nvar _c;\n$RefreshReg$(_c, \"ShowTask\");","map":{"version":3,"names":["React","useState","useSelector","useNavigate","jsxDEV","_jsxDEV","ShowTask","_s","activeButton","setActiveButton","navigate","obj","state","taskController","console","log","handleButtonClick","buttonId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Outlet","_c","$RefreshReg$"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './showTask.css'; // Стилі для панелі\n\nconst ShowTask = () => {\n  // Локальний стан для управління активною кнопкою\n  const [activeButton, setActiveButton] = useState('button1');\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Вибірка даних з Redux (якщо потрібно)\n  const obj = useSelector((state) => state.taskController);\n  console.log(obj);\n\n  const handleButtonClick = (buttonId) => {\n    setActiveButton(buttonId);\n    if (buttonId === 'button1') {\n      navigate('show-individual-tasks'); // to ShowIndividualTasks\n    } else if (buttonId === 'button2') {\n      navigate('show-corporate-tasks'); // to ShowCorporateTasks\n    }\n  };\n\n  return (\n    <div className=\"show-task-container\">\n    <div className=\"button-panel\">\n      <button\n        className={`button ${activeButton === 'button1' ? 'active' : ''}`}\n        onClick={() => handleButtonClick('button1')}\n      >\n        Show individual tasks\n      </button>\n      <button\n        className={`button ${activeButton === 'button2' ? 'active' : ''}`}\n        onClick={() => handleButtonClick('button2')}\n      >\n        Show corporate tasks\n      </button>\n    </div>\n    <div className=\"content\">\n      <Outlet /> {/* Рендерити дочірні компоненти */}\n    </div>\n  </div>\n);\n};\n\nexport default ShowTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMQ,GAAG,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC;EACxDC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAEhB,MAAMK,iBAAiB,GAAIC,QAAQ,IAAK;IACtCR,eAAe,CAACQ,QAAQ,CAAC;IACzB,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC1BP,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM,IAAIO,QAAQ,KAAK,SAAS,EAAE;MACjCP,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACpC;EACF,CAAC;EAED,oBACEL,OAAA;IAAKa,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACpCd,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3Bd,OAAA;QACEa,SAAS,EAAE,UAAUV,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAClEY,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAAC,SAAS,CAAE;QAAAG,QAAA,EAC7C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QACEa,SAAS,EAAE,UAAUV,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAClEY,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAAC,SAAS,CAAE;QAAAG,QAAA,EAC7C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBd,OAAA,CAACoB,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACjB,EAAA,CAvCID,QAAQ;EAAA,QAGKH,WAAW,EAGhBD,WAAW;AAAA;AAAAwB,EAAA,GANnBpB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}