{"ast":null,"code":"var _jsxFileName = \"/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTask, filterTasks, sortTasks } from '../TaskController/TaskControllerSlice';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport ModalWnd from '../ModalWindow/ModalWnd';\nimport OneTask from '../OneTask/OneTask';\nimport './ShowTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowTask = () => {\n  _s();\n  const [activeButton, setActiveButton] = useState('button1');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  ///////////////////for edit\n  const tasks = useSelector(state => state.taskController.tasks);\n  console.log(\"Array tasks:\", tasks);\n  const selectedTask = tasks.find(task => task.taskID === selectedRowю);\n  console.log(\"selectedTask\", selectedTask);\n  console.log(\"selectedRow\", selectedRow);\n  /////////////////////for edit\n\n  const handleButtonClick = buttonId => {\n    setActiveButton(buttonId);\n    if (buttonId === 'button1') {\n      navigate('show-individual-tasks');\n    } else if (buttonId === 'button2') {\n      navigate('show-corporate-tasks');\n    }\n  };\n  const handleRowSelect = rowID => {\n    setSelectedRow(rowID);\n  };\n  const handleEditClick = () => {\n    if (selectedRow) {\n      setIsModalOpen(true);\n      console.log('Editing row:', selectedRow);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleDeleteClick = () => {\n    if (selectedRow) {\n      dispatch(deleteTask(selectedRow.taskID));\n      setSelectedRow(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button1' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button1'),\n        children: \"Show individual tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button2' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button2'),\n        children: \"Show corporate tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button button-edit ${selectedRow ? 'active' : 'disabled'}`,\n        onClick: handleEditClick,\n        disabled: !selectedRow,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button button-delete ${selectedRow ? 'active' : 'disabled'}`,\n        onClick: handleDeleteClick,\n        disabled: !selectedRow,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-panel-container\",\n      children: /*#__PURE__*/_jsxDEV(FilterPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Outlet, {\n        context: {\n          onRowSelect: handleRowSelect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalWnd, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        children: /*#__PURE__*/_jsxDEV(OneTask, {\n          task: selectedTask,\n          onSave: () => {\n            handleCloseModal(); // Close modalWindow after save\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowTask, \"6jAUvdM6+SN66DWLivFa8fBj7/A=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = ShowTask;\nexport default ShowTask;\nvar _c;\n$RefreshReg$(_c, \"ShowTask\");","map":{"version":3,"names":["React","useState","useNavigate","Outlet","useSelector","useDispatch","deleteTask","filterTasks","sortTasks","FilterPanel","ModalWnd","OneTask","jsxDEV","_jsxDEV","ShowTask","_s","activeButton","setActiveButton","selectedRow","setSelectedRow","isModalOpen","setIsModalOpen","navigate","dispatch","tasks","state","taskController","console","log","selectedTask","find","task","taskID","selectedRowю","handleButtonClick","buttonId","handleRowSelect","rowID","handleEditClick","handleCloseModal","handleDeleteClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","context","onRowSelect","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTask, filterTasks, sortTasks} from '../TaskController/TaskControllerSlice';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport ModalWnd from '../ModalWindow/ModalWnd';\nimport OneTask from '../OneTask/OneTask';\nimport './ShowTask.css';\n\nconst ShowTask = () => {\n    const [activeButton, setActiveButton] = useState('button1');\n    const [selectedRow, setSelectedRow] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    ///////////////////for edit\n    const tasks = useSelector((state) => state.taskController.tasks);\n    console.log(\"Array tasks:\",tasks);\n    const selectedTask = tasks.find(task => task.taskID === selectedRowю);\n    console.log(\"selectedTask\", selectedTask);\n    console.log(\"selectedRow\", selectedRow);\n    /////////////////////for edit\n\n\n    const handleButtonClick = (buttonId) => {\n        setActiveButton(buttonId);\n        if (buttonId === 'button1') {\n            navigate('show-individual-tasks');\n        } else if (buttonId === 'button2') {\n            navigate('show-corporate-tasks');\n        }\n    };\n\n    const handleRowSelect = (rowID) => {\n        setSelectedRow(rowID);\n    };\n\n    const handleEditClick = () => {\n        if (selectedRow) {\n            setIsModalOpen(true);\n            console.log('Editing row:', selectedRow);\n        }\n    };\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n    };\n\n\n    const handleDeleteClick = () => {\n        if (selectedRow) {\n            dispatch(deleteTask(selectedRow.taskID));\n            setSelectedRow(null);\n        }\n    };\n\n    return (\n        <div className=\"show-task-container\">\n            <div className=\"button-panel\">\n                <button\n                    className={`button ${activeButton === 'button1' ? 'active' : ''}`}\n                    onClick={() => handleButtonClick('button1')}\n                >\n                    Show individual tasks\n                </button>\n                <button\n                    className={`button ${activeButton === 'button2' ? 'active' : ''}`}\n                    onClick={() => handleButtonClick('button2')}\n                >\n                    Show corporate tasks\n                </button>\n                <button\n                    className={`button button-edit ${selectedRow ? 'active' : 'disabled'}`}\n                    onClick={handleEditClick}\n                    disabled={!selectedRow}\n                >\n                    Edit\n                </button>\n                <button\n                    className={`button button-delete ${selectedRow ? 'active' : 'disabled'}`}\n                    onClick={handleDeleteClick}\n                    disabled={!selectedRow}\n                >\n                    Delete\n                </button>\n            </div>\n            <div className=\"filter-panel-container\">\n                <FilterPanel />\n            </div>\n            <div className=\"content\">\n                <Outlet context={{ onRowSelect: handleRowSelect }} />\n                <ModalWnd isOpen={isModalOpen} onClose={handleCloseModal}>\n                    <OneTask\n                        task={selectedTask}\n                        onSave={() => {\n                            handleCloseModal(); // Close modalWindow after save\n                        }}\n                    />\n                </ModalWnd>\n            </div>\n        </div>\n    );\n};\n\nexport default ShowTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}