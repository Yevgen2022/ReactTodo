{"ast":null,"code":"var _jsxFileName = \"/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowIndividualTasks/ShowIndividualTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useOutletContext } from 'react-router-dom';\nimport './ShowIndividualTasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowIndividualTasks = () => {\n  _s();\n  const tasks = useSelector(state => state.taskController.tasks);\n\n  // Context from parent component \n  const {\n    onRowSelect\n  } = useOutletContext();\n\n  // Local state\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n\n  //Sets the new selected row in the local state \"selectedTaskId\"\n  const handleRowClick = taskID => {\n    const newSelectedTaskId = selectedTaskId === taskID ? null : taskID;\n    setSelectedTaskId(newSelectedTaskId);\n\n    // Call the context function to update the parent component's state\n    onRowSelect(newSelectedTaskId ? {\n      taskID: newSelectedTaskId\n    } : null);\n\n    // onRowSelect(newSelectedTaskId);//if we are using props\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Individual Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: task.taskID === selectedTaskId ? 'selected' : '',\n          onClick: () => handleRowClick(task.taskID),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskType.textType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskPriority.textPriority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDate.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDate.endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskCompleted ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowIndividualTasks, \"pY7HKVJ/DcLHbqbQEKs3Cl2Z8+M=\", false, function () {\n  return [useSelector, useOutletContext];\n});\n_c = ShowIndividualTasks;\nexport default ShowIndividualTasks;\nvar _c;\n$RefreshReg$(_c, \"ShowIndividualTasks\");","map":{"version":3,"names":["React","useState","useSelector","useOutletContext","jsxDEV","_jsxDEV","ShowIndividualTasks","_s","tasks","state","taskController","onRowSelect","selectedTaskId","setSelectedTaskId","handleRowClick","taskID","newSelectedTaskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onClick","taskName","taskDescription","taskType","textType","taskPriority","textPriority","taskDate","startDate","endDate","taskCompleted","_c","$RefreshReg$"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowIndividualTasks/ShowIndividualTasks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useOutletContext } from 'react-router-dom';\nimport './ShowIndividualTasks.css';\n\nconst ShowIndividualTasks = () => {\n  const tasks = useSelector((state) => state.taskController.tasks);\n\n  // Context from parent component \n  const { onRowSelect } = useOutletContext();\n\n  // Local state\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n\n  //Sets the new selected row in the local state \"selectedTaskId\"\n  const handleRowClick = (taskID) => {\n    const newSelectedTaskId = selectedTaskId === taskID ? null : taskID;\n    setSelectedTaskId(newSelectedTaskId);\n\n    // Call the context function to update the parent component's state\n    onRowSelect(newSelectedTaskId ? { taskID: newSelectedTaskId } : null);\n\n   // onRowSelect(newSelectedTaskId);//if we are using props\n  };\n\n  return (\n    <div className=\"tasks-table\">\n      <h2>Individual Tasks</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Task ID</th>\n            <th>Task Name</th>\n            <th>Description</th>\n            <th>Type</th>\n            <th>Priority</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Completed</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task) => (\n            <tr\n              key={task.taskID}\n              className={task.taskID === selectedTaskId ? 'selected' : ''}\n              onClick={() => handleRowClick(task.taskID)}\n            >\n              <td>{task.taskID}</td>\n              <td>{task.taskName}</td>\n              <td>{task.taskDescription}</td>\n              <td>{task.taskType.textType}</td>\n              <td>{task.taskPriority.textPriority}</td>\n              <td>{task.taskDate.startDate}</td>\n              <td>{task.taskDate.endDate}</td>\n              <td>{task.taskCompleted ? 'Yes' : 'No'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ShowIndividualTasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}