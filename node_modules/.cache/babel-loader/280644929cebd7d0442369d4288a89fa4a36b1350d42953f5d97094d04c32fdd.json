{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialTasks = [];\nconst initialState = {\n  tasks: [{\n    taskID: '77986',\n    taskName: 'Shopping',\n    taskDescription: 'I will do it in \"OCEAN\" centre',\n    taskType: {\n      numberType: 1,\n      textType: 'Home'\n    },\n    taskPriority: {\n      numberPriority: 2,\n      textPriority: 'Medium'\n    },\n    taskDate: {\n      startDate: '2024-08-07',\n      endDate: '2024-08-07'\n    },\n    taskCompleted: false\n  }, {\n    taskID: '23145',\n    taskName: 'Gym',\n    taskDescription: 'Morning workout session',\n    taskType: {\n      numberType: 4,\n      textType: 'Individual'\n    },\n    taskPriority: {\n      numberPriority: 3,\n      textPriority: 'High'\n    },\n    taskDate: {\n      startDate: '2024-08-08',\n      endDate: '2024-08-08'\n    },\n    taskCompleted: true\n  }, {\n    taskID: '87964',\n    taskName: 'Study',\n    taskDescription: 'Complete React tutorial',\n    taskType: {\n      numberType: 2,\n      textType: 'Education'\n    },\n    taskPriority: {\n      numberPriority: 1,\n      textPriority: 'Low'\n    },\n    taskDate: {\n      startDate: '2024-08-09',\n      endDate: '2024-08-09'\n    },\n    taskCompleted: false\n  }, {\n    taskID: '54632',\n    taskName: 'Project Meeting',\n    taskDescription: 'Discuss project requirements with team',\n    taskType: {\n      numberType: 5,\n      textType: 'General'\n    },\n    taskPriority: {\n      numberPriority: 4,\n      textPriority: 'Urgent'\n    },\n    taskDate: {\n      startDate: '2024-08-10',\n      endDate: '2024-08-10'\n    },\n    taskCompleted: true\n  }, {\n    taskID: '21458',\n    taskName: 'Grocery Shopping',\n    taskDescription: 'Buy vegetables and fruits',\n    taskType: {\n      numberType: 1,\n      textType: 'Home'\n    },\n    taskPriority: {\n      numberPriority: 2,\n      textPriority: 'Medium'\n    },\n    taskDate: {\n      startDate: '2024-08-11',\n      endDate: '2024-08-11'\n    },\n    taskCompleted: false\n  }, {\n    taskID: '96325',\n    taskName: 'Dentist Appointment',\n    taskDescription: 'Annual dental check-up',\n    taskType: {\n      numberType: 4,\n      textType: 'Individual'\n    },\n    taskPriority: {\n      numberPriority: 3,\n      textPriority: 'High'\n    },\n    taskDate: {\n      startDate: '2024-08-12',\n      endDate: '2024-08-12'\n    },\n    taskCompleted: true\n  }, {\n    taskID: '65478',\n    taskName: 'Parent-Teacher Meeting',\n    taskDescription: 'Discuss child’s progress',\n    taskType: {\n      numberType: 3,\n      textType: 'Children'\n    },\n    taskPriority: {\n      numberPriority: 1,\n      textPriority: 'Low'\n    },\n    taskDate: {\n      startDate: '2024-08-13',\n      endDate: '2024-08-13'\n    },\n    taskCompleted: false\n  }, {\n    taskID: '32657',\n    taskName: 'Car Service',\n    taskDescription: 'Routine car maintenance',\n    taskType: {\n      numberType: 1,\n      textType: 'Home'\n    },\n    taskPriority: {\n      numberPriority: 2,\n      textPriority: 'Medium'\n    },\n    taskDate: {\n      startDate: '2024-08-14',\n      endDate: '2024-08-14'\n    },\n    taskCompleted: true\n  }, {\n    taskID: '74125',\n    taskName: 'Office Work',\n    taskDescription: 'Complete monthly report',\n    taskType: {\n      numberType: 5,\n      textType: 'General'\n    },\n    taskPriority: {\n      numberPriority: 3,\n      textPriority: 'High'\n    },\n    taskDate: {\n      startDate: '2024-08-15',\n      endDate: '2024-08-15'\n    },\n    taskCompleted: false\n  }, {\n    taskID: '82563',\n    taskName: 'Birthday Party',\n    taskDescription: 'Organize birthday party for friend',\n    taskType: {\n      numberType: 5,\n      textType: 'General'\n    },\n    taskPriority: {\n      numberPriority: 2,\n      textPriority: 'Medium'\n    },\n    taskDate: {\n      startDate: '2024-08-16',\n      endDate: '2024-08-16'\n    },\n    taskCompleted: true\n  }],\n  filterTasks: state.tasks,\n  filterType: ''\n};\nconst taskControllerSlice = createSlice({\n  name: 'taskController',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    deleteTask: (state, action) => {\n      const taskIdToDelete = action.payload;\n      state.filterTasks = state.tasks.filter(task => task.taskID !== taskIdToDelete);\n      /////////////////////////////////////////////////////////////////////\n      console.log(\"State from taskController after deleteTask\", state.filterTasks);\n      /////////////////////////////////////////////////////////////////////\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.taskID === action.payload.taskID);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    filterTasks: (state, action) => {\n      state.filterType = action.payload;\n      if (parseInt(state.filterType) === 0) {\n        state.filterTasks = state.tasks; // Якщо filterType == 0, присвоїти весь масив tasks\n      } else {\n        state.filterTasks = state.tasks.filter(task => task.taskType.numberType === parseInt(state.filterType));\n      }\n      console.log(\"Array of filters\", state.filteredTasks);\n    },\n    sortTasks: (state, action) => {}\n  }\n});\nexport const {\n  addTask,\n  deleteTask,\n  updateTask,\n  filterTasks,\n  sortTasks\n} = taskControllerSlice.actions;\nexport default taskControllerSlice.reducer;","map":{"version":3,"names":["createSlice","initialTasks","initialState","tasks","taskID","taskName","taskDescription","taskType","numberType","textType","taskPriority","numberPriority","textPriority","taskDate","startDate","endDate","taskCompleted","filterTasks","state","filterType","taskControllerSlice","name","reducers","addTask","action","push","payload","deleteTask","taskIdToDelete","filter","task","console","log","updateTask","index","findIndex","parseInt","filteredTasks","sortTasks","actions","reducer"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/TaskController/TaskControllerSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialTasks = []\n\nconst initialState = {\n  tasks: [\n    {\n        taskID: '77986',\n        taskName: 'Shopping',\n        taskDescription: 'I will do it in \"OCEAN\" centre',\n        taskType: { numberType: 1, textType: 'Home' },\n        taskPriority: { numberPriority: 2, textPriority: 'Medium' },\n        taskDate: { startDate: '2024-08-07', endDate: '2024-08-07' },\n        taskCompleted: false\n      },\n      {\n        taskID: '23145',\n        taskName: 'Gym',\n        taskDescription: 'Morning workout session',\n        taskType: { numberType: 4, textType: 'Individual' },\n        taskPriority: { numberPriority: 3, textPriority: 'High' },\n        taskDate: { startDate: '2024-08-08', endDate: '2024-08-08' },\n        taskCompleted: true\n      },\n      {\n        taskID: '87964',\n        taskName: 'Study',\n        taskDescription: 'Complete React tutorial',\n        taskType: { numberType: 2, textType: 'Education' },\n        taskPriority: { numberPriority: 1, textPriority: 'Low' },\n        taskDate: { startDate: '2024-08-09', endDate: '2024-08-09' },\n        taskCompleted: false\n      },\n      {\n        taskID: '54632',\n        taskName: 'Project Meeting',\n        taskDescription: 'Discuss project requirements with team',\n        taskType: { numberType: 5, textType: 'General' },\n        taskPriority: { numberPriority: 4, textPriority: 'Urgent' },\n        taskDate: { startDate: '2024-08-10', endDate: '2024-08-10' },\n        taskCompleted: true\n      },\n      {\n        taskID: '21458',\n        taskName: 'Grocery Shopping',\n        taskDescription: 'Buy vegetables and fruits',\n        taskType: { numberType: 1, textType: 'Home' },\n        taskPriority: { numberPriority: 2, textPriority: 'Medium' },\n        taskDate: { startDate: '2024-08-11', endDate: '2024-08-11' },\n        taskCompleted: false\n      },\n      {\n        taskID: '96325',\n        taskName: 'Dentist Appointment',\n        taskDescription: 'Annual dental check-up',\n        taskType: { numberType: 4, textType: 'Individual' },\n        taskPriority: { numberPriority: 3, textPriority: 'High' },\n        taskDate: { startDate: '2024-08-12', endDate: '2024-08-12' },\n        taskCompleted: true\n      },\n      {\n        taskID: '65478',\n        taskName: 'Parent-Teacher Meeting',\n        taskDescription: 'Discuss child’s progress',\n        taskType: { numberType: 3, textType: 'Children' },\n        taskPriority: { numberPriority: 1, textPriority: 'Low' },\n        taskDate: { startDate: '2024-08-13', endDate: '2024-08-13' },\n        taskCompleted: false\n      },\n      {\n        taskID: '32657',\n        taskName: 'Car Service',\n        taskDescription: 'Routine car maintenance',\n        taskType: { numberType: 1, textType: 'Home' },\n        taskPriority: { numberPriority: 2, textPriority: 'Medium' },\n        taskDate: { startDate: '2024-08-14', endDate: '2024-08-14' },\n        taskCompleted: true\n      },\n      {\n        taskID: '74125',\n        taskName: 'Office Work',\n        taskDescription: 'Complete monthly report',\n        taskType: { numberType: 5, textType: 'General' },\n        taskPriority: { numberPriority: 3, textPriority: 'High' },\n        taskDate: { startDate: '2024-08-15', endDate: '2024-08-15' },\n        taskCompleted: false\n      },\n      {\n        taskID: '82563',\n        taskName: 'Birthday Party',\n        taskDescription: 'Organize birthday party for friend',\n        taskType: { numberType: 5, textType: 'General' },\n        taskPriority: { numberPriority: 2, textPriority: 'Medium' },\n        taskDate: { startDate: '2024-08-16', endDate: '2024-08-16' },\n        taskCompleted: true\n      }\n  ],\n  filterTasks: state.tasks,\n  filterType: '', \n};\n\nconst taskControllerSlice = createSlice({\n  name: 'taskController',\n  initialState,\n  reducers: {\n\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n\n    deleteTask: (state, action) => {\n      const taskIdToDelete = action.payload;\n      state.filterTasks = state.tasks.filter(task => task.taskID !== taskIdToDelete);\n      /////////////////////////////////////////////////////////////////////\n      console.log(\"State from taskController after deleteTask\",state.filterTasks);\n      /////////////////////////////////////////////////////////////////////\n    },\n\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.taskID === action.payload.taskID);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    \n    filterTasks: (state, action) => {\n      state.filterType = action.payload;\n      \n      if (parseInt(state.filterType) === 0) {\n        state.filterTasks = state.tasks; // Якщо filterType == 0, присвоїти весь масив tasks\n      } else {\n        state.filterTasks = state.tasks.filter(task => \n          task.taskType.numberType === parseInt(state.filterType)\n        );\n      }\n      \n      console.log(\"Array of filters\", state.filteredTasks);\n    },\n\n    sortTasks: (state, action) => {\n      \n    }\n  }\n});\n\nexport const { addTask, deleteTask , updateTask, filterTasks, sortTasks } = taskControllerSlice.actions;\n\nexport default taskControllerSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}