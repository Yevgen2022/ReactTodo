{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  tasks: []\n};\nconst taskControllerSlice = createSlice({\n  name: 'taskController',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.taskID !== action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.taskID === action.payload.taskID);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    filterTasks: (state, action) => {\n      // implement filtering logic\n    },\n    sortTasks: (state, action) => {\n      // implement sorting logic\n    }\n  }\n});\nexport const {\n  addTask,\n  removeTask,\n  updateTask,\n  filterTasks,\n  sortTasks\n} = taskControllerSlice.actions;\nexport default taskControllerSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","taskControllerSlice","name","reducers","addTask","state","action","push","payload","removeTask","filter","task","taskID","updateTask","index","findIndex","filterTasks","sortTasks","actions","reducer"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/TaskController/TaskControllerSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  tasks: [\n    \n  ]\n};\n\nconst taskControllerSlice = createSlice({\n  name: 'taskController',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.taskID !== action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.taskID === action.payload.taskID);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    filterTasks: (state, action) => {\n      // implement filtering logic\n    },\n    sortTasks: (state, action) => {\n      // implement sorting logic\n    }\n  }\n});\n\nexport const { addTask, removeTask, updateTask, filterTasks, sortTasks } = taskControllerSlice.actions;\n\nexport default taskControllerSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AAGT,CAAC;AAED,MAAMC,mBAAmB,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,gBAAgB;EACtBH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKN,MAAM,CAACE,OAAO,CAAC;IAC1E,CAAC;IACDK,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMQ,KAAK,GAAGT,KAAK,CAACL,KAAK,CAACe,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKN,MAAM,CAACE,OAAO,CAACI,MAAM,CAAC;MAClF,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBT,KAAK,CAACL,KAAK,CAACc,KAAK,CAAC,GAAGR,MAAM,CAACE,OAAO;MACrC;IACF,CAAC;IACDQ,WAAW,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC9B;IAAA,CACD;IACDW,SAAS,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC5B;IAAA;EAEJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,OAAO;EAAEK,UAAU;EAAEI,UAAU;EAAEG,WAAW;EAAEC;AAAU,CAAC,GAAGhB,mBAAmB,CAACiB,OAAO;AAEtG,eAAejB,mBAAmB,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}