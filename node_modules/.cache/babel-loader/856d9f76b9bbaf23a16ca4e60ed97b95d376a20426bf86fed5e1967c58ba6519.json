{"ast":null,"code":"var _jsxFileName = \"/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTask, filterTasks, sortTasks } from '../TaskController/TaskControllerSlice';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport ModalWnd from '../ModalWindow/ModalWnd';\nimport OneTask from '../OneTask/OneTask';\nimport './ShowTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowTask = () => {\n  _s();\n  const [activeButton, setActiveButton] = useState('button1');\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  //   const tasks = useSelector((state) => state.taskController.tasks);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.taskController.tasks);\n  const selectedTask = tasks.find(task => task.taskID === selectedRow);\n  con;\n  const handleButtonClick = buttonId => {\n    setActiveButton(buttonId);\n    if (buttonId === 'button1') {\n      navigate('show-individual-tasks');\n    } else if (buttonId === 'button2') {\n      navigate('show-corporate-tasks');\n    }\n  };\n  const handleRowSelect = rowID => {\n    setSelectedRow(rowID);\n  };\n  const handleEditClick = () => {\n    if (selectedRow) {\n      setIsModalOpen(true);\n      console.log('Editing row:', selectedRow);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleDeleteClick = () => {\n    if (selectedRow) {\n      console.log('Deleting row:', selectedRow);\n      dispatch(deleteTask(selectedRow.taskID));\n      setSelectedRow(null);\n    }\n  };\n  const handleSearch = query => {};\n  const handleTypeFilterChange = value => {\n    dispatch(filterTasks(value));\n    console.log('Type filter value:', value);\n  };\n  const handleSortChange = value => {\n    dispatch(sortTasks(value));\n    console.log('Sort by:', value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button1' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button1'),\n        children: \"Show individual tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${activeButton === 'button2' ? 'active' : ''}`,\n        onClick: () => handleButtonClick('button2'),\n        children: \"Show corporate tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button button-edit ${selectedRow ? 'active' : 'disabled'}`,\n        onClick: handleEditClick,\n        disabled: !selectedRow,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button button-delete ${selectedRow ? 'active' : 'disabled'}`,\n        onClick: handleDeleteClick,\n        disabled: !selectedRow,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-panel-container\",\n      children: /*#__PURE__*/_jsxDEV(FilterPanel, {\n        onSearch: handleSearch,\n        onTypeFilterChange: handleTypeFilterChange,\n        onSortChange: handleSortChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Outlet, {\n        context: {\n          onRowSelect: handleRowSelect\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalWnd, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        children: /*#__PURE__*/_jsxDEV(OneTask, {\n          task: selectedTask,\n          onSave: () => {\n            handleCloseModal(); // Закрити модальне вікно після збереження\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowTask, \"6jAUvdM6+SN66DWLivFa8fBj7/A=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = ShowTask;\nexport default ShowTask;\nvar _c;\n$RefreshReg$(_c, \"ShowTask\");","map":{"version":3,"names":["React","useState","useNavigate","Outlet","useSelector","useDispatch","deleteTask","filterTasks","sortTasks","FilterPanel","ModalWnd","OneTask","jsxDEV","_jsxDEV","ShowTask","_s","activeButton","setActiveButton","selectedRow","setSelectedRow","isModalOpen","setIsModalOpen","navigate","dispatch","tasks","state","taskController","selectedTask","find","task","taskID","con","handleButtonClick","buttonId","handleRowSelect","rowID","handleEditClick","console","log","handleCloseModal","handleDeleteClick","handleSearch","query","handleTypeFilterChange","value","handleSortChange","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onSearch","onTypeFilterChange","onSortChange","context","onRowSelect","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowTask/ShowTask.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTask, filterTasks, sortTasks } from '../TaskController/TaskControllerSlice';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport ModalWnd from '../ModalWindow/ModalWnd';\nimport OneTask from '../OneTask/OneTask';\nimport './ShowTask.css';\n\nconst ShowTask = () => {\n    const [activeButton, setActiveButton] = useState('button1');\n    const [selectedRow, setSelectedRow] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n    //   const tasks = useSelector((state) => state.taskController.tasks);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const tasks = useSelector((state) => state.taskController.tasks);\n    const selectedTask = tasks.find(task => task.taskID === selectedRow);\n    con\n\n\n    const handleButtonClick = (buttonId) => {\n        setActiveButton(buttonId);\n        if (buttonId === 'button1') {\n            navigate('show-individual-tasks');\n        } else if (buttonId === 'button2') {\n            navigate('show-corporate-tasks');\n        }\n    };\n\n    const handleRowSelect = (rowID) => {\n        setSelectedRow(rowID);\n    };\n\n    const handleEditClick = () => {\n        if (selectedRow) {\n            setIsModalOpen(true);\n            console.log('Editing row:', selectedRow);\n        }\n    };\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n    };\n\n\n    const handleDeleteClick = () => {\n        if (selectedRow) {\n            console.log('Deleting row:', selectedRow);\n            dispatch(deleteTask(selectedRow.taskID));\n            setSelectedRow(null);\n        }\n    };\n\n\n    const handleSearch = (query) => {\n\n    };\n\n    const handleTypeFilterChange = (value) => {\n        dispatch(filterTasks(value));\n        console.log('Type filter value:', value);\n\n    };\n\n\n    const handleSortChange = (value) => {\n        dispatch(sortTasks(value));\n        console.log('Sort by:', value);\n\n    };\n\n    return (\n        <div className=\"show-task-container\">\n            <div className=\"button-panel\">\n                <button\n                    className={`button ${activeButton === 'button1' ? 'active' : ''}`}\n                    onClick={() => handleButtonClick('button1')}\n                >\n                    Show individual tasks\n                </button>\n                <button\n                    className={`button ${activeButton === 'button2' ? 'active' : ''}`}\n                    onClick={() => handleButtonClick('button2')}\n                >\n                    Show corporate tasks\n                </button>\n                <button\n                    className={`button button-edit ${selectedRow ? 'active' : 'disabled'}`}\n                    onClick={handleEditClick}\n                    disabled={!selectedRow}\n                >\n                    Edit\n                </button>\n                <button\n                    className={`button button-delete ${selectedRow ? 'active' : 'disabled'}`}\n                    onClick={handleDeleteClick}\n                    disabled={!selectedRow}\n                >\n                    Delete\n                </button>\n            </div>\n            <div className=\"filter-panel-container\">\n                <FilterPanel\n                    onSearch={handleSearch}\n                    onTypeFilterChange={handleTypeFilterChange}\n                    onSortChange={handleSortChange}\n                />\n            </div>\n            <div className=\"content\">\n                <Outlet context={{ onRowSelect: handleRowSelect }} />\n                <ModalWnd isOpen={isModalOpen} onClose={handleCloseModal}>\n                    <OneTask\n                        task={selectedTask}\n                        onSave={() => {\n                            handleCloseModal(); // Закрити модальне вікно після збереження\n                        }}\n                    />\n                </ModalWnd>\n            </div>\n        </div>\n    );\n};\n\nexport default ShowTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,WAAW,EAAEC,SAAS,QAAQ,uCAAuC;AAC1F,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAGrD;EACA,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,KAAK,GAAGpB,WAAW,CAAEqB,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACF,KAAK,CAAC;EAChE,MAAMG,YAAY,GAAGH,KAAK,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKZ,WAAW,CAAC;EACpEa,GAAG;EAGH,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACpChB,eAAe,CAACgB,QAAQ,CAAC;IACzB,IAAIA,QAAQ,KAAK,SAAS,EAAE;MACxBX,QAAQ,CAAC,uBAAuB,CAAC;IACrC,CAAC,MAAM,IAAIW,QAAQ,KAAK,SAAS,EAAE;MAC/BX,QAAQ,CAAC,sBAAsB,CAAC;IACpC;EACJ,CAAC;EAED,MAAMY,eAAe,GAAIC,KAAK,IAAK;IAC/BhB,cAAc,CAACgB,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIlB,WAAW,EAAE;MACbG,cAAc,CAAC,IAAI,CAAC;MACpBgB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEpB,WAAW,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BlB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAGD,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAItB,WAAW,EAAE;MACbmB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEpB,WAAW,CAAC;MACzCK,QAAQ,CAACjB,UAAU,CAACY,WAAW,CAACY,MAAM,CAAC,CAAC;MACxCX,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC;EAGD,MAAMsB,YAAY,GAAIC,KAAK,IAAK,CAEhC,CAAC;EAED,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACtCrB,QAAQ,CAAChB,WAAW,CAACqC,KAAK,CAAC,CAAC;IAC5BP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,KAAK,CAAC;EAE5C,CAAC;EAGD,MAAMC,gBAAgB,GAAID,KAAK,IAAK;IAChCrB,QAAQ,CAACf,SAAS,CAACoC,KAAK,CAAC,CAAC;IAC1BP,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEM,KAAK,CAAC;EAElC,CAAC;EAED,oBACI/B,OAAA;IAAKiC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChClC,OAAA;MAAKiC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBlC,OAAA;QACIiC,SAAS,EAAE,UAAU9B,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAClEgC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAAC,SAAS,CAAE;QAAAe,QAAA,EAC/C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvC,OAAA;QACIiC,SAAS,EAAE,UAAU9B,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAClEgC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAAC,SAAS,CAAE;QAAAe,QAAA,EAC/C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvC,OAAA;QACIiC,SAAS,EAAE,sBAAsB5B,WAAW,GAAG,QAAQ,GAAG,UAAU,EAAG;QACvE8B,OAAO,EAAEZ,eAAgB;QACzBiB,QAAQ,EAAE,CAACnC,WAAY;QAAA6B,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvC,OAAA;QACIiC,SAAS,EAAE,wBAAwB5B,WAAW,GAAG,QAAQ,GAAG,UAAU,EAAG;QACzE8B,OAAO,EAAER,iBAAkB;QAC3Ba,QAAQ,EAAE,CAACnC,WAAY;QAAA6B,QAAA,EAC1B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACnClC,OAAA,CAACJ,WAAW;QACR6C,QAAQ,EAAEb,YAAa;QACvBc,kBAAkB,EAAEZ,sBAAuB;QAC3Ca,YAAY,EAAEX;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvC,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBlC,OAAA,CAACV,MAAM;QAACsD,OAAO,EAAE;UAAEC,WAAW,EAAExB;QAAgB;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDvC,OAAA,CAACH,QAAQ;QAACiD,MAAM,EAAEvC,WAAY;QAACwC,OAAO,EAAErB,gBAAiB;QAAAQ,QAAA,eACrDlC,OAAA,CAACF,OAAO;UACJkB,IAAI,EAAEF,YAAa;UACnBkC,MAAM,EAAEA,CAAA,KAAM;YACVtB,gBAAgB,CAAC,CAAC,CAAC,CAAC;UACxB;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrC,EAAA,CApHID,QAAQ;EAAA,QAOOZ,WAAW,EACXG,WAAW,EAEdD,WAAW;AAAA;AAAA0D,EAAA,GAVvBhD,QAAQ;AAsHd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}