{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuid4 } from \"uuid\";\nconst initialState = {\n  taskID: 0,\n  taskName: \"\",\n  taskDescription: \"\",\n  taskType: {\n    numberType: 0,\n    textType: \"\"\n  },\n  taskPriority: {\n    numberPriority: 0,\n    textPriority: \"\"\n  },\n  taskDate: {\n    startDate: \"\",\n    endDate: \"\"\n  },\n  taskCompleted: false\n};\nconst generateShortID = () => {\n  const uuid = uuid4(); // Генеруємо UUID\n  return uuid.slice(0, 5); // Використовуємо перші 5 символів UUID як короткий ID\n};\nexport const oneTaskSlice = createSlice({\n  name: \"OneTask\",\n  initialState,\n  reducers: {\n    createName: (state, action) => {\n      state.taskName = action.payload;\n    },\n    createDescription: (state, action) => {\n      state.taskDescription = action.payload;\n    },\n    createID: state => {\n      state.taskID = generateShortID();\n    },\n    createTaskType: (state, action) => {\n      state.taskType = action.payload;\n    },\n    createPriority: (state, action) => {\n      state.taskPriority = action.payload;\n    },\n    createDate: (state, action) => {\n      state.taskDate = action.payload;\n    },\n    createCompleted: (state, action) => {\n      state.taskCompleted = action.payload;\n    }\n  }\n});\nexport const {\n  createName,\n  createDescription,\n  createID,\n  createTaskType,\n  createPriority,\n  createDate,\n  createCompleted,\n  resetTaskState\n} = oneTaskSlice.actions;\nучз;\nexport default oneTaskSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuid4","initialState","taskID","taskName","taskDescription","taskType","numberType","textType","taskPriority","numberPriority","textPriority","taskDate","startDate","endDate","taskCompleted","generateShortID","uuid","slice","oneTaskSlice","name","reducers","createName","state","action","payload","createDescription","createID","createTaskType","createPriority","createDate","createCompleted","resetTaskState","actions","учз","reducer"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/OneTask/OneTaskSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuid4 } from \"uuid\";\n\nconst initialState = {\n    taskID: 0,\n    taskName: \"\",\n    taskDescription: \"\",\n    taskType: {\n        numberType: 0,\n        textType: \"\"\n    },\n    taskPriority: {\n        numberPriority: 0,\n        textPriority: \"\",\n    },\n    taskDate: {\n        startDate: \"\",\n        endDate: \"\"\n    },\n    taskCompleted: false\n}\n\nconst generateShortID = () => {\n    const uuid = uuid4(); // Генеруємо UUID\n    return uuid.slice(0, 5); // Використовуємо перші 5 символів UUID як короткий ID\n}\n\n\nexport const oneTaskSlice = createSlice({\n\n    name: \"OneTask\",\n    initialState,\n    reducers: {\n        createName: (state, action) => {\n            state.taskName = action.payload;\n        },\n\n        createDescription: (state, action) => {\n            state.taskDescription = action.payload;\n        },\n\n        createID: (state) => {\n            state.taskID = generateShortID();\n        },\n\n        createTaskType: (state, action) => {\n            state.taskType = action.payload;\n        },\n\n        createPriority: (state, action) => {\n            state.taskPriority = action.payload;\n        },\n\n        createDate: (state, action) => {\n            state.taskDate = action.payload;\n        },\n\n        createCompleted: (state,action) =>{\n            state.taskCompleted = action.payload;\n        },\n    }\n})\n\nexport const { createName,\n               createDescription,\n               createID,\n               createTaskType,\n               createPriority,\n               createDate,\n               createCompleted,\n               resetTaskState } = oneTaskSlice.actions;\n               учз\nexport default oneTaskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,IAAIC,KAAK,QAAQ,MAAM;AAElC,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,EAAE;EACnBC,QAAQ,EAAE;IACNC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACd,CAAC;EACDC,YAAY,EAAE;IACVC,cAAc,EAAE,CAAC;IACjBC,YAAY,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACb,CAAC;EACDC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,IAAI,GAAGhB,KAAK,CAAC,CAAC,CAAC,CAAC;EACtB,OAAOgB,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGpB,WAAW,CAAC;EAEpCqB,IAAI,EAAE,SAAS;EACflB,YAAY;EACZmB,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACnB,QAAQ,GAAGoB,MAAM,CAACC,OAAO;IACnC,CAAC;IAEDC,iBAAiB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAAClB,eAAe,GAAGmB,MAAM,CAACC,OAAO;IAC1C,CAAC;IAEDE,QAAQ,EAAGJ,KAAK,IAAK;MACjBA,KAAK,CAACpB,MAAM,GAAGa,eAAe,CAAC,CAAC;IACpC,CAAC;IAEDY,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACjB,QAAQ,GAAGkB,MAAM,CAACC,OAAO;IACnC,CAAC;IAEDI,cAAc,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACd,YAAY,GAAGe,MAAM,CAACC,OAAO;IACvC,CAAC;IAEDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACX,QAAQ,GAAGY,MAAM,CAACC,OAAO;IACnC,CAAC;IAEDM,eAAe,EAAEA,CAACR,KAAK,EAACC,MAAM,KAAI;MAC9BD,KAAK,CAACR,aAAa,GAAGS,MAAM,CAACC,OAAO;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EACVI,iBAAiB;EACjBC,QAAQ;EACRC,cAAc;EACdC,cAAc;EACdC,UAAU;EACVC,eAAe;EACfC;AAAe,CAAC,GAAGb,YAAY,CAACc,OAAO;AACvCC,GAAG;AAClB,eAAef,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}