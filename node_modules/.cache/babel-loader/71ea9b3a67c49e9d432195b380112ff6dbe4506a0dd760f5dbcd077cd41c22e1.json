{"ast":null,"code":"var _jsxFileName = \"/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowIndividualTasks/ShowIndividualTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './ShowIndividualTasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowIndividualTasks = () => {\n  _s();\n  // Data sampling from Redux\n  const tasks = useSelector(state => state.taskController.tasks);\n\n  // Local state to store the selected row\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n\n  // Click handler for row selection\n  const handleRowClick = taskID => {\n    setSelectedTaskId(selectedTaskId === taskID ? null : taskID);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Individual Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: task.taskID === selectedTaskId ? 'selected' : '',\n          onClick: () => handleRowClick(task.taskID),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskType.textType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskPriority.textPriority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDate.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskDate.endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskCompleted ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowIndividualTasks, \"klDELVfqkkSuRcRoFzd7F0duWvs=\", false, function () {\n  return [useSelector];\n});\n_c = ShowIndividualTasks;\nexport default ShowIndividualTasks;\nvar _c;\n$RefreshReg$(_c, \"ShowIndividualTasks\");","map":{"version":3,"names":["React","useState","useSelector","jsxDEV","_jsxDEV","ShowIndividualTasks","_s","tasks","state","taskController","selectedTaskId","setSelectedTaskId","handleRowClick","taskID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onClick","taskName","taskDescription","taskType","textType","taskPriority","textPriority","taskDate","startDate","endDate","taskCompleted","_c","$RefreshReg$"],"sources":["/Users/yoshkukov/PRACTICE/WORK/React/todo-react/src/components/ShowIndividualTasks/ShowIndividualTasks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './ShowIndividualTasks.css'; \n\nconst ShowIndividualTasks = () => {\n  // Data sampling from Redux\n  const tasks = useSelector((state) => state.taskController.tasks);\n  \n  // Local state to store the selected row\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n\n  // Click handler for row selection\n  const handleRowClick = (taskID) => {\n    setSelectedTaskId(selectedTaskId === taskID ? null : taskID);\n  };\n\n  return (\n    <div className=\"tasks-table\">\n      <h2>Individual Tasks</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Task ID</th>\n            <th>Task Name</th>\n            <th>Description</th>\n            <th>Type</th>\n            <th>Priority</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Completed</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task) => (\n            <tr\n              key={task.taskID}\n              className={task.taskID === selectedTaskId ? 'selected' : ''}\n              onClick={() => handleRowClick(task.taskID)}\n            >\n              <td>{task.taskID}</td>\n              <td>{task.taskName}</td>\n              <td>{task.taskDescription}</td>\n              <td>{task.taskType.textType}</td>\n              <td>{task.taskPriority.textPriority}</td>\n              <td>{task.taskDate.startDate}</td>\n              <td>{task.taskDate.endDate}</td>\n              <td>{task.taskCompleted ? 'Yes' : 'No'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ShowIndividualTasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}